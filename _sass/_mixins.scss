
// Responsive mixin (Foundation-like medium/large + custom-made "hd" breakpoint)
@mixin break($media) {
  @if $media == s { 
    // Usage: @include break(s) { .. }
    @media only screen and (min-width: $break-s) { @content; }
  }
  @else if $media == m {
    // Usage: @include break(m) { .. }
    @media only screen and (min-width: $break-m) { @content; }
  }
  @else if $media == t {
    // Usage: @include break(t) { .. }
    @media only screen and (min-width: $break-t) { @content; }
  }
  @else if $media == l {
    // Usage: @include break(l) { .. }
    @media only screen and (min-width: $break-l) { @content; }
  }
  @else if $media == xl {
    // Usage: @include break(xl) { .. }
    @media only screen and (min-width: $break-xl) { @content; }
  }
  @else if $media == large {
    @media only screen and (min-width: $break-large) { @content; }
  }
}

// Custom responsivity (px-based, for when default breakpoints aren't enough)
@mixin break-from($size) {
  // Usage: @include break-from(741px) {  }
  @media only screen and (min-width: $size) { @content; }
}


// Orientation mixin for landscape/portrait
@mixin orientation($orientation) {
  // @include orientation(landscape) { ... }
  // @include orientation(portrait) { ... }
  @media only screen and (orientation: $orientation) { @content; }
}


// @include gradient (<top-color>, <bottom-color>);
@mixin gradient($top, $bottom) {
  background: $top;
  background: -moz-linear-gradient(top, $top 0%, $bottom 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom));
  background: -webkit-linear-gradient(top, $top 0%,$bottom 100%);
  background: -o-linear-gradient(top, $top 0%,$bottom 100%);
  background: -ms-linear-gradient(top, $top 0%,$bottom 100%);
  background: linear-gradient(to bottom, $top 0%,$bottom 100%);
}


//include border-radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($shadow...) {
  box-shadow: $shadow;
  -webkit-box-shadow: $shadow;
}



// Before medium devices
@mixin before_md {
   @media (max-width: #{$screen-md-max}) {
       @content;
   }
}

// Medium device
@mixin md {
   @media (min-width: #{$screen-md-min}) {
       @content;
   }
}

//Between medium and large
@mixin between_m_lg {
  @media (min-width: #{$screen-md-min}) and (max-width: #{$screen-lg-max:}) {
    @content;
  }
}

//Between medium and extra large
@mixin between_m_mlg {
  @media (min-width: #{$screen-md-min}) and (max-width: #{$screen-lg-max}) {
    @content;
  }
}

// Before extra large devices
@mixin before_xl {
   @media (max-width: #{$screen-lg-max}) {
       @content;
   }
}

//After extra large devices
@mixin after_xl {
   @media (min-width: #{$screen-xl-min}) {
       @content;
   }
}

// Large devices
@mixin lg {
   @media (min-width: #{$screen-lg-max}) {
       @content;
   }
}

// Between medium and Extra Large
@mixin between_minlg_maxlg {
   @media (min-width: #{$screen-lg-min}) and (max-width: #{$screen-lg-max}) {
       @content;
   }
}
 
// After Desktop and Large Desktop
@mixin between_lg_mlg {
  @media (min-width: #{$screen-xl-min}) and (max-width: #{$screen-xl-max}) {
    @content;
  }
}

// After Desktop and Large Desktop
@mixin mlg {
  @media (min-width: #{$screen-mxl}) {
    @content;
  }
}